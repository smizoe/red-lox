 fun makeCounter() {
     var i = 0;
     fun count() {
         i = i + 1;
         print i;
     }
     return count;
 }
 var counter = makeCounter();
 counter(); // out: 1
 counter(); // out: 2
 var a = "global";
{
    fun showA() {
        print a;
    }
    showA();  // out: global
    var a = "block";
    a;  // avoid the unused variable error
    showA();  // out: global
}
fun outer() {
    var x = "value";
    fun middle() {
        fun inner() {
            print x;
        }
        print "create inner closure";
        return inner;
    }
    print "return from outer";
    return middle;
}
var mid = outer();
var in = mid();
in();
// out: return from outer
// out: create inner closure
// out: value
fun outer() {
    var x = "before";
    fun inner() {
        x = "assigned";
    }
    inner();
    print x;
}
outer();
// out: assigned
fun outer() {
    var x = "outside";
    fun inner() {
        print x;
    }
    inner();
}
outer();
// out: outside
var globalSet;
var globalGet;
fun main() {
    var a = "initial";
    fun set() { a = "updated"; }
    fun get() { print a; }
    globalSet = set;
    globalGet = get;
}
main();
globalSet();
globalGet(); // out: updated